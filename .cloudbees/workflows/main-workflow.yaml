apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Main workflow
on:
  push:
    branches:
      - "**"
  workflow_dispatch:
permissions:
  scm-token-own: read
  scm-token-org: read
  id-token: write

jobs:
  jira-fetch:
    name: Fetch JIRA Issues
    steps:
      - name: Install Go-JIRA CLI
        uses: atlassian/gajira-cli@v3
        id: setupJiraCli
        with:
          version: "1.0.27"

      - name: Login to Jira
        uses: atlassian/gajira-login@v3
        id: jiraLogin
        env:
          JIRA_BASE_URL: ${{ secrets.WES_JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.WES_JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.WES_JIRA_API_TOKEN }}

      - name: Run JQL query & format as table
        uses: atlassian/gajira-cli@v3
        id: queryJira
        run: |
          # fetch issues as JSON
          jira --json search \
            --jql 'project = "CB-Demo" AND statusCategory != Done' \
            > jira-issues.json

          # start Markdown table in outputs
          echo "| Issue Key | Summary |" >> $CLOUDBEES_OUTPUTS/JIRA_TABLE
          echo "|-----------|---------|" >> $CLOUDBEES_OUTPUTS/JIRA_TABLE

          # append one row per issue
          jq -r '.issues[] | "| \(.key) | \(.fields.summary) |"' jira-issues.json \
            >> $CLOUDBEES_OUTPUTS/JIRA_TABLE

      - name: Publish JIRA query results
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## JIRA issues still “Not Done” in CB-Demo

            ${{ steps.queryJira.outputs.JIRA_TABLE }}
          format: MARKDOWN

    outputs:
      JIRA_TABLE: ${{ steps.queryJira.outputs.JIRA_TABLE }}